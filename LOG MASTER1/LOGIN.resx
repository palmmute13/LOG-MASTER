<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        t2YPoRkWLPgfb3nTF+NA6G4AAAAASUVORK5CYII=
</value>
  </data>
</root>